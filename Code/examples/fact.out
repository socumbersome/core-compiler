Supercombinator definitions
Code for fac
 Code:{Pushint 0
       Push 1
       Eval
       Eq
       (Cond
       1-> {Pushint 1}
       0-> {Pushint 1; Push 1; Pushglobal -; ...})
       Update 1
       Pop 1
       Unwind}



Code for main
 Code:{Pushint 3
       Pushglobal fac
       MkAppl
       Eval
       Update 0
       Pop 0
       Unwind}



Code for I
 Code:{Push 0
       Eval
       Update 1
       Pop 1
       Unwind}



Code for K
 Code:{Push 0
       Eval
       Update 2
       Pop 2
       Unwind}



Code for K1
 Code:{Push 1
       Eval
       Update 2
       Pop 2
       Unwind}



Code for S
 Code:{Push 2
       Push 2
       MkAppl
       Push 3
       Push 2
       MkAppl
       MkAppl
       Eval
       Update 3
       Pop 3
       Unwind}



Code for compose
 Code:{Push 2
       Push 2
       MkAppl
       Push 1
       MkAppl
       Eval
       Update 3
       Pop 3
       Unwind}



Code for twice
 Code:{Push 0
       Push 1
       Pushglobal compose
       MkAppl
       MkAppl
       Eval
       Update 1
       Pop 1
       Unwind}



Code for +
 Code:{Push 1
       Eval
       Push 1
       Eval
       Add
       Update 2
       Pop 2
       Unwind}



Code for -
 Code:{Push 1
       Eval
       Push 1
       Eval
       Sub
       Update 2
       Pop 2
       Unwind}



Code for *
 Code:{Push 1
       Eval
       Push 1
       Eval
       Mul
       Update 2
       Pop 2
       Unwind}



Code for /
 Code:{Push 1
       Eval
       Push 1
       Eval
       Div
       Update 2
       Pop 2
       Unwind}



Code for neg
 Code:{Push 0
       Eval
       Neg
       Update 1
       Pop 1
       Unwind}



Code for ==
 Code:{Push 1
       Eval
       Push 1
       Eval
       Eq
       Update 2
       Pop 2
       Unwind}



Code for !=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Ne
       Update 2
       Pop 2
       Unwind}



Code for <
 Code:{Push 1
       Eval
       Push 1
       Eval
       Lt
       Update 2
       Pop 2
       Unwind}



Code for <=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Le
       Update 2
       Pop 2
       Unwind}



Code for >
 Code:{Push 1
       Eval
       Push 1
       Eval
       Gt
       Update 2
       Pop 2
       Unwind}



Code for >=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Ge
       Update 2
       Pop 2
       Unwind}



Code for if
 Code:{Push 0
       Eval
       (Cond
       1-> {Push 1}
       0-> {Push 2})
       Update 3
       Pop 3
       Unwind}




State transitions

   1)  Stack:[]
       Dump:[]
       Code:{Pushglobal main
             Eval}
      
      
   2)  Stack:[#2: Global main]
       Dump:[]
       Code:{Eval}
      
      
   3)  Stack:[#2: Global main]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
   4)  Stack:[#2: Global main]
       Dump:[<{}, []>]
       Code:{Pushint 3
             Pushglobal fac
             MkAppl
             Eval
             Update 0
             Pop 0
             Unwind}
      
      
   5)  Stack:[#2: Global main
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushglobal fac
             MkAppl
             Eval
             Update 0
             Pop 0
             Unwind}
      
      
   6)  Stack:[#2: Global main
              #21: 3
              #1: Global fac]
       Dump:[<{}, []>]
       Code:{MkAppl
             Eval
             Update 0
             Pop 0
             Unwind}
      
      
   7)  Stack:[#2: Global main
              #22: Appl #1 #21]
       Dump:[<{}, []>]
       Code:{Eval
             Update 0
             Pop 0
             Unwind}
      
      
   8)  Stack:[#22: Appl #1 #21]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Unwind}
      
      
   9)  Stack:[#22: Appl #1 #21
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Unwind}
      
      
  10)  Stack:[#22: Appl #1 #21
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Pushint 0
             Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  11)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  12)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 0
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  13)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #21, #22]>]
       Code:{Unwind}
      
      
  14)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 0
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  15)  Stack:[#22: Appl #1 #21
              #21: 3
              #24: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{(Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  16)  Stack:[#22: Appl #1 #21
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  17)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  18)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: 1
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  19)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: 1
              #21: 3
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  20)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: 1
              #26: Appl #10 #21]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  21)  Stack:[#22: Appl #1 #21
              #21: 3
              #27: Appl #26 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  22)  Stack:[#22: Appl #1 #21
              #21: 3
              #27: Appl #26 #25
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  23)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #1 #27]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  24)  Stack:[#28: Appl #1 #27]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Unwind}
      
      
  25)  Stack:[#28: Appl #1 #27
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Unwind}
      
      
  26)  Stack:[#28: Appl #1 #27
              #27: Appl #26 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Pushint 0
             Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  27)  Stack:[#28: Appl #1 #27
              #27: Appl #26 #25
              #23: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  28)  Stack:[#28: Appl #1 #27
              #27: Appl #26 #25
              #23: 0
              #27: Appl #26 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  29)  Stack:[#27: Appl #26 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Unwind}
      
      
  30)  Stack:[#27: Appl #26 #25
              #26: Appl #10 #21]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Unwind}
      
      
  31)  Stack:[#27: Appl #26 #25
              #26: Appl #10 #21
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Unwind}
      
      
  32)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  33)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  34)  Stack:[#25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>
             <{Push 1; Eval; Sub; ...}, [#21, #25, #27]>]
       Code:{Unwind}
      
      
  35)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  36)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3
              #25: 1
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  37)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>
             <{Sub; Update 2; Pop 2; ...}, [#25, #21, #25, #27]>]
       Code:{Unwind}
      
      
  38)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3
              #25: 1
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
  39)  Stack:[#27: Appl #26 #25
              #25: 1
              #21: 3
              #29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
  40)  Stack:[#27: Ind #29
              #25: 1
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Pop 2
             Unwind}
      
      
  41)  Stack:[#27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Unwind}
      
      
  42)  Stack:[#29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #27, #28]>]
       Code:{Unwind}
      
      
  43)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #23: 0
              #29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  44)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #30: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{(Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  45)  Stack:[#28: Appl #1 #27
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  46)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  47)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #25: 1
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  48)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #25: 1
              #27: Ind #29
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  49)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #25: 1
              #31: Appl #10 #27]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  50)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #32: Appl #31 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  51)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #32: Appl #31 #25
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  52)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #33: Appl #1 #32]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  53)  Stack:[#33: Appl #1 #32]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Unwind}
      
      
  54)  Stack:[#33: Appl #1 #32
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Unwind}
      
      
  55)  Stack:[#33: Appl #1 #32
              #32: Appl #31 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Pushint 0
             Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  56)  Stack:[#33: Appl #1 #32
              #32: Appl #31 #25
              #23: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  57)  Stack:[#33: Appl #1 #32
              #32: Appl #31 #25
              #23: 0
              #32: Appl #31 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  58)  Stack:[#32: Appl #31 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Unwind}
      
      
  59)  Stack:[#32: Appl #31 #25
              #31: Appl #10 #27]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Unwind}
      
      
  60)  Stack:[#32: Appl #31 #25
              #31: Appl #10 #27
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Unwind}
      
      
  61)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  62)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  63)  Stack:[#25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>
             <{Push 1; Eval; Sub; ...}, [#27, #25, #32]>]
       Code:{Unwind}
      
      
  64)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  65)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29
              #25: 1
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  66)  Stack:[#27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>
             <{Sub; Update 2; Pop 2; ...}, [#25, #27, #25, #32]>]
       Code:{Unwind}
      
      
  67)  Stack:[#29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>
             <{Sub; Update 2; Pop 2; ...}, [#25, #27, #25, #32]>]
       Code:{Unwind}
      
      
  68)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29
              #25: 1
              #29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
  69)  Stack:[#32: Appl #31 #25
              #25: 1
              #27: Ind #29
              #34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
  70)  Stack:[#32: Ind #34
              #25: 1
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Pop 2
             Unwind}
      
      
  71)  Stack:[#32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Unwind}
      
      
  72)  Stack:[#34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #32, #33]>]
       Code:{Unwind}
      
      
  73)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #23: 0
              #34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  74)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #35: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{(Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  75)  Stack:[#33: Appl #1 #32
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  76)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  77)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  78)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1
              #32: Ind #34
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  79)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1
              #36: Appl #10 #32]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  80)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #37: Appl #36 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Pushglobal fac
             MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  81)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #37: Appl #36 #25
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{MkAppl
             Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  82)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #38: Appl #1 #37]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
  83)  Stack:[#38: Appl #1 #37]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Unwind}
      
      
  84)  Stack:[#38: Appl #1 #37
              #1: Global fac]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Unwind}
      
      
  85)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Pushint 0
             Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  86)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #25
              #23: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Push 1
             Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  87)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #25
              #23: 0
              #37: Appl #36 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Eval
             Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
  88)  Stack:[#37: Appl #36 #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Unwind}
      
      
  89)  Stack:[#37: Appl #36 #25
              #36: Appl #10 #32]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Unwind}
      
      
  90)  Stack:[#37: Appl #36 #25
              #36: Appl #10 #32
              #10: Global -]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Unwind}
      
      
  91)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  92)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  93)  Stack:[#25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>
             <{Push 1; Eval; Sub; ...}, [#32, #25, #37]>]
       Code:{Unwind}
      
      
  94)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  95)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34
              #25: 1
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
  96)  Stack:[#32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>
             <{Sub; Update 2; Pop 2; ...}, [#25, #32, #25, #37]>]
       Code:{Unwind}
      
      
  97)  Stack:[#34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>
             <{Sub; Update 2; Pop 2; ...}, [#25, #32, #25, #37]>]
       Code:{Unwind}
      
      
  98)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34
              #25: 1
              #34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
  99)  Stack:[#37: Appl #36 #25
              #25: 1
              #32: Ind #34
              #39: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 100)  Stack:[#37: Ind #39
              #25: 1
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Pop 2
             Unwind}
      
      
 101)  Stack:[#37: Ind #39]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Unwind}
      
      
 102)  Stack:[#39: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>
             <{Eq; (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...}); Update 1; ...}, [#23, #37, #38]>]
       Code:{Unwind}
      
      
 103)  Stack:[#38: Appl #1 #37
              #37: Ind #39
              #23: 0
              #39: 0]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Eq
             (Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
 104)  Stack:[#38: Appl #1 #37
              #37: Ind #39
              #40: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{(Cond
             1-> {Pushint 1}
             0-> {Pushint 1; Push 1; Pushglobal -; ...})
             Update 1
             Pop 1
             Unwind}
      
      
 105)  Stack:[#38: Appl #1 #37
              #37: Ind #39]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Pushint 1
             Update 1
             Pop 1
             Unwind}
      
      
 106)  Stack:[#38: Appl #1 #37
              #37: Ind #39
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 107)  Stack:[#38: Ind #25
              #37: Ind #39]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Pop 1
             Unwind}
      
      
 108)  Stack:[#38: Ind #25]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Unwind}
      
      
 109)  Stack:[#25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Push 1; Eval; Mul; ...}, [#32, #33]>]
       Code:{Unwind}
      
      
 110)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 111)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 112)  Stack:[#32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Mul; Update 1; Pop 1; ...}, [#25, #32, #33]>]
       Code:{Unwind}
      
      
 113)  Stack:[#34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>
             <{Mul; Update 1; Pop 1; ...}, [#25, #32, #33]>]
       Code:{Unwind}
      
      
 114)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #25: 1
              #34: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Mul
             Update 1
             Pop 1
             Unwind}
      
      
 115)  Stack:[#33: Appl #1 #32
              #32: Ind #34
              #41: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 116)  Stack:[#33: Ind #41
              #32: Ind #34]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Pop 1
             Unwind}
      
      
 117)  Stack:[#33: Ind #41]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Unwind}
      
      
 118)  Stack:[#41: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Push 1; Eval; Mul; ...}, [#27, #28]>]
       Code:{Unwind}
      
      
 119)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #41: 1]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 120)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #41: 1
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 121)  Stack:[#27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Mul; Update 1; Pop 1; ...}, [#41, #27, #28]>]
       Code:{Unwind}
      
      
 122)  Stack:[#29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>
             <{Mul; Update 1; Pop 1; ...}, [#41, #27, #28]>]
       Code:{Unwind}
      
      
 123)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #41: 1
              #29: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Mul
             Update 1
             Pop 1
             Unwind}
      
      
 124)  Stack:[#28: Appl #1 #27
              #27: Ind #29
              #42: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 125)  Stack:[#28: Ind #42
              #27: Ind #29]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Pop 1
             Unwind}
      
      
 126)  Stack:[#28: Ind #42]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Unwind}
      
      
 127)  Stack:[#42: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Push 1; Eval; Mul; ...}, [#21, #22]>]
       Code:{Unwind}
      
      
 128)  Stack:[#22: Appl #1 #21
              #21: 3
              #42: 2]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Push 1
             Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 129)  Stack:[#22: Appl #1 #21
              #21: 3
              #42: 2
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Eval
             Mul
             Update 1
             Pop 1
             Unwind}
      
      
 130)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>
             <{Mul; Update 1; Pop 1; ...}, [#42, #21, #22]>]
       Code:{Unwind}
      
      
 131)  Stack:[#22: Appl #1 #21
              #21: 3
              #42: 2
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Mul
             Update 1
             Pop 1
             Unwind}
      
      
 132)  Stack:[#22: Appl #1 #21
              #21: 3
              #43: 6]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 133)  Stack:[#22: Ind #43
              #21: 3]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Pop 1
             Unwind}
      
      
 134)  Stack:[#22: Ind #43]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Unwind}
      
      
 135)  Stack:[#43: 6]
       Dump:[<{}, []>
             <{Update 0; Pop 0; Unwind}, [#2]>]
       Code:{Unwind}
      
      
 136)  Stack:[#2: Global main
              #43: 6]
       Dump:[<{}, []>]
       Code:{Update 0
             Pop 0
             Unwind}
      
      
 137)  Stack:[#2: Ind #43]
       Dump:[<{}, []>]
       Code:{Pop 0
             Unwind}
      
      
 138)  Stack:[#2: Ind #43]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
 139)  Stack:[#43: 6]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
 140)  Stack:[#43: 6]
       Dump:[]
       Code:{}
      
      


Steps taken = 139