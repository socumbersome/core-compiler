Supercombinator definitions
Code for fac
 Code:{Pushint 1
       Push 1
       Pushglobal -
       MkAppl
       MkAppl
       Pushglobal fac
       MkAppl
       Push 1
       Pushglobal *
       MkAppl
       MkAppl
       Pushint 1
       Pushint 0
       Push 3
       Pushglobal ==
       MkAppl
       MkAppl
       Pushglobal if
       MkAppl
       MkAppl
       MkAppl
       Update 1
       Pop 1
       Unwind}



Code for main
 Code:{Pushint 3
       Pushglobal fac
       MkAppl
       Update 0
       Pop 0
       Unwind}



Code for I
 Code:{Push 0
       Update 1
       Pop 1
       Unwind}



Code for K
 Code:{Push 0
       Update 2
       Pop 2
       Unwind}



Code for K1
 Code:{Push 1
       Update 2
       Pop 2
       Unwind}



Code for S
 Code:{Push 2
       Push 2
       MkAppl
       Push 3
       Push 2
       MkAppl
       MkAppl
       Update 3
       Pop 3
       Unwind}



Code for compose
 Code:{Push 2
       Push 2
       MkAppl
       Push 1
       MkAppl
       Update 3
       Pop 3
       Unwind}



Code for twice
 Code:{Push 0
       Push 1
       Pushglobal compose
       MkAppl
       MkAppl
       Update 1
       Pop 1
       Unwind}



Code for +
 Code:{Push 1
       Eval
       Push 1
       Eval
       Add
       Update 2
       Pop 2
       Unwind}



Code for -
 Code:{Push 1
       Eval
       Push 1
       Eval
       Sub
       Update 2
       Pop 2
       Unwind}



Code for *
 Code:{Push 1
       Eval
       Push 1
       Eval
       Mul
       Update 2
       Pop 2
       Unwind}



Code for /
 Code:{Push 1
       Eval
       Push 1
       Eval
       Div
       Update 2
       Pop 2
       Unwind}



Code for neg
 Code:{Push 0
       Eval
       Neg
       Update 1
       Pop 1
       Unwind}



Code for ==
 Code:{Push 1
       Eval
       Push 1
       Eval
       Eq
       Update 2
       Pop 2
       Unwind}



Code for !=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Ne
       Update 2
       Pop 2
       Unwind}



Code for <
 Code:{Push 1
       Eval
       Push 1
       Eval
       Lt
       Update 2
       Pop 2
       Unwind}



Code for <=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Le
       Update 2
       Pop 2
       Unwind}



Code for >
 Code:{Push 1
       Eval
       Push 1
       Eval
       Gt
       Update 2
       Pop 2
       Unwind}



Code for >=
 Code:{Push 1
       Eval
       Push 1
       Eval
       Ge
       Update 2
       Pop 2
       Unwind}



Code for if
 Code:{Push 0
       Eval
       (Cond
       1-> {Push 1}
       0-> {Push 2})
       Update 3
       Pop 3
       Unwind}




State transitions

   1)  Stack:[]
       Dump:[]
       Code:{Pushglobal main
             Eval}
      
      
   2)  Stack:[#2: Global main]
       Dump:[]
       Code:{Eval}
      
      
   3)  Stack:[#2: Global main]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
   4)  Stack:[#2: Global main]
       Dump:[<{}, []>]
       Code:{Pushint 3
             Pushglobal fac
             MkAppl
             Update 0
             Pop 0
             Unwind}
      
      
   5)  Stack:[#2: Global main
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushglobal fac
             MkAppl
             Update 0
             Pop 0
             Unwind}
      
      
   6)  Stack:[#2: Global main
              #21: 3
              #1: Global fac]
       Dump:[<{}, []>]
       Code:{MkAppl
             Update 0
             Pop 0
             Unwind}
      
      
   7)  Stack:[#2: Global main
              #22: Appl #1 #21]
       Dump:[<{}, []>]
       Code:{Update 0
             Pop 0
             Unwind}
      
      
   8)  Stack:[#2: Ind #22]
       Dump:[<{}, []>]
       Code:{Pop 0
             Unwind}
      
      
   9)  Stack:[#2: Ind #22]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  10)  Stack:[#22: Appl #1 #21]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  11)  Stack:[#22: Appl #1 #21
              #1: Global fac]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  12)  Stack:[#22: Appl #1 #21
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  13)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 1]
       Dump:[<{}, []>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  14)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 1
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  15)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 1
              #21: 3
              #10: Global -]
       Dump:[<{}, []>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  16)  Stack:[#22: Appl #1 #21
              #21: 3
              #23: 1
              #24: Appl #10 #21]
       Dump:[<{}, []>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  17)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: Appl #24 #23]
       Dump:[<{}, []>]
       Code:{Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  18)  Stack:[#22: Appl #1 #21
              #21: 3
              #25: Appl #24 #23
              #1: Global fac]
       Dump:[<{}, []>]
       Code:{MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  19)  Stack:[#22: Appl #1 #21
              #21: 3
              #26: Appl #1 #25]
       Dump:[<{}, []>]
       Code:{Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  20)  Stack:[#22: Appl #1 #21
              #21: 3
              #26: Appl #1 #25
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  21)  Stack:[#22: Appl #1 #21
              #21: 3
              #26: Appl #1 #25
              #21: 3
              #11: Global *]
       Dump:[<{}, []>]
       Code:{MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  22)  Stack:[#22: Appl #1 #21
              #21: 3
              #26: Appl #1 #25
              #27: Appl #11 #21]
       Dump:[<{}, []>]
       Code:{MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  23)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26]
       Dump:[<{}, []>]
       Code:{Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  24)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1]
       Dump:[<{}, []>]
       Code:{Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  25)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #29: 0]
       Dump:[<{}, []>]
       Code:{Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  26)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #29: 0
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  27)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #29: 0
              #21: 3
              #14: Global ==]
       Dump:[<{}, []>]
       Code:{MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  28)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #29: 0
              #30: Appl #14 #21]
       Dump:[<{}, []>]
       Code:{MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  29)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #31: Appl #30 #29]
       Dump:[<{}, []>]
       Code:{Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  30)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #31: Appl #30 #29
              #20: Global if]
       Dump:[<{}, []>]
       Code:{MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  31)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #23: 1
              #32: Appl #20 #31]
       Dump:[<{}, []>]
       Code:{MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  32)  Stack:[#22: Appl #1 #21
              #21: 3
              #28: Appl #27 #26
              #33: Appl #32 #23]
       Dump:[<{}, []>]
       Code:{MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  33)  Stack:[#22: Appl #1 #21
              #21: 3
              #34: Appl #33 #28]
       Dump:[<{}, []>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
  34)  Stack:[#22: Ind #34
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pop 1
             Unwind}
      
      
  35)  Stack:[#22: Ind #34]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  36)  Stack:[#34: Appl #33 #28]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  37)  Stack:[#34: Appl #33 #28
              #33: Appl #32 #23]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  38)  Stack:[#34: Appl #33 #28
              #33: Appl #32 #23
              #32: Appl #20 #31]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  39)  Stack:[#34: Appl #33 #28
              #33: Appl #32 #23
              #32: Appl #20 #31
              #20: Global if]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  40)  Stack:[#34: Appl #33 #28
              #28: Appl #27 #26
              #23: 1
              #31: Appl #30 #29]
       Dump:[<{}, []>]
       Code:{Push 0
             Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
  41)  Stack:[#34: Appl #33 #28
              #28: Appl #27 #26
              #23: 1
              #31: Appl #30 #29
              #31: Appl #30 #29]
       Dump:[<{}, []>]
       Code:{Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
  42)  Stack:[#31: Appl #30 #29]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Unwind}
      
      
  43)  Stack:[#31: Appl #30 #29
              #30: Appl #14 #21]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Unwind}
      
      
  44)  Stack:[#31: Appl #30 #29
              #30: Appl #14 #21
              #14: Global ==]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Unwind}
      
      
  45)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
  46)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3
              #29: 0]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
  47)  Stack:[#29: 0]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>
             <{Push 1; Eval; Eq; ...}, [#21, #29, #31]>]
       Code:{Unwind}
      
      
  48)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3
              #29: 0]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
  49)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3
              #29: 0
              #21: 3]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
  50)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #21, #29, #31]>]
       Code:{Unwind}
      
      
  51)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3
              #29: 0
              #21: 3]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Eq
             Update 2
             Pop 2
             Unwind}
      
      
  52)  Stack:[#31: Appl #30 #29
              #29: 0
              #21: 3
              #35: 0]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
  53)  Stack:[#31: Ind #35
              #29: 0
              #21: 3]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Pop 2
             Unwind}
      
      
  54)  Stack:[#31: Ind #35]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Unwind}
      
      
  55)  Stack:[#35: 0]
       Dump:[<{}, []>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#31, #23, #28, #34]>]
       Code:{Unwind}
      
      
  56)  Stack:[#34: Appl #33 #28
              #28: Appl #27 #26
              #23: 1
              #31: Ind #35
              #35: 0]
       Dump:[<{}, []>]
       Code:{(Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
  57)  Stack:[#34: Appl #33 #28
              #28: Appl #27 #26
              #23: 1
              #31: Ind #35]
       Dump:[<{}, []>]
       Code:{Push 2
             Update 3
             Pop 3
             Unwind}
      
      
  58)  Stack:[#34: Appl #33 #28
              #28: Appl #27 #26
              #23: 1
              #31: Ind #35
              #28: Appl #27 #26]
       Dump:[<{}, []>]
       Code:{Update 3
             Pop 3
             Unwind}
      
      
  59)  Stack:[#34: Ind #28
              #28: Appl #27 #26
              #23: 1
              #31: Ind #35]
       Dump:[<{}, []>]
       Code:{Pop 3
             Unwind}
      
      
  60)  Stack:[#34: Ind #28]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  61)  Stack:[#28: Appl #27 #26]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  62)  Stack:[#28: Appl #27 #26
              #27: Appl #11 #21]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  63)  Stack:[#28: Appl #27 #26
              #27: Appl #11 #21
              #11: Global *]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
  64)  Stack:[#28: Appl #27 #26
              #26: Appl #1 #25
              #21: 3]
       Dump:[<{}, []>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
  65)  Stack:[#28: Appl #27 #26
              #26: Appl #1 #25
              #21: 3
              #26: Appl #1 #25]
       Dump:[<{}, []>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
  66)  Stack:[#26: Appl #1 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  67)  Stack:[#26: Appl #1 #25
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  68)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  69)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  70)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #23: 1
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  71)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #23: 1
              #25: Appl #24 #23
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  72)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #23: 1
              #36: Appl #10 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  73)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  74)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #37: Appl #36 #23
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  75)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #38: Appl #1 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  76)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #38: Appl #1 #37
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  77)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #38: Appl #1 #37
              #25: Appl #24 #23
              #11: Global *]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  78)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #38: Appl #1 #37
              #39: Appl #11 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  79)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  80)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  81)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  82)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #29: 0
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  83)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #29: 0
              #25: Appl #24 #23
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  84)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #29: 0
              #41: Appl #14 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  85)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #42: Appl #41 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  86)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #42: Appl #41 #29
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  87)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #23: 1
              #43: Appl #20 #42]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  88)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #40: Appl #39 #38
              #44: Appl #43 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
  89)  Stack:[#26: Appl #1 #25
              #25: Appl #24 #23
              #45: Appl #44 #40]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
  90)  Stack:[#26: Ind #45
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pop 1
             Unwind}
      
      
  91)  Stack:[#26: Ind #45]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  92)  Stack:[#45: Appl #44 #40]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  93)  Stack:[#45: Appl #44 #40
              #44: Appl #43 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  94)  Stack:[#45: Appl #44 #40
              #44: Appl #43 #23
              #43: Appl #20 #42]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  95)  Stack:[#45: Appl #44 #40
              #44: Appl #43 #23
              #43: Appl #20 #42
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
  96)  Stack:[#45: Appl #44 #40
              #40: Appl #39 #38
              #23: 1
              #42: Appl #41 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 0
             Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
  97)  Stack:[#45: Appl #44 #40
              #40: Appl #39 #38
              #23: 1
              #42: Appl #41 #29
              #42: Appl #41 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
  98)  Stack:[#42: Appl #41 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Unwind}
      
      
  99)  Stack:[#42: Appl #41 #29
              #41: Appl #14 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Unwind}
      
      
 100)  Stack:[#42: Appl #41 #29
              #41: Appl #14 #25
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Unwind}
      
      
 101)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 102)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Appl #24 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 103)  Stack:[#29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Push 1; Eval; Eq; ...}, [#25, #29, #42]>]
       Code:{Unwind}
      
      
 104)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Appl #24 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 105)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Appl #24 #23
              #29: 0
              #25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 106)  Stack:[#25: Appl #24 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Unwind}
      
      
 107)  Stack:[#25: Appl #24 #23
              #24: Appl #10 #21]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Unwind}
      
      
 108)  Stack:[#25: Appl #24 #23
              #24: Appl #10 #21
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Unwind}
      
      
 109)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 110)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 111)  Stack:[#23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>
             <{Push 1; Eval; Sub; ...}, [#21, #23, #25]>]
       Code:{Unwind}
      
      
 112)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 113)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3
              #23: 1
              #21: 3]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 114)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>
             <{Sub; Update 2; Pop 2; ...}, [#23, #21, #23, #25]>]
       Code:{Unwind}
      
      
 115)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3
              #23: 1
              #21: 3]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
 116)  Stack:[#25: Appl #24 #23
              #23: 1
              #21: 3
              #46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 117)  Stack:[#25: Ind #46
              #23: 1
              #21: 3]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Pop 2
             Unwind}
      
      
 118)  Stack:[#25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Unwind}
      
      
 119)  Stack:[#46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #25, #29, #42]>]
       Code:{Unwind}
      
      
 120)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Ind #46
              #29: 0
              #46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Eq
             Update 2
             Pop 2
             Unwind}
      
      
 121)  Stack:[#42: Appl #41 #29
              #29: 0
              #25: Ind #46
              #47: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 122)  Stack:[#42: Ind #47
              #29: 0
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Pop 2
             Unwind}
      
      
 123)  Stack:[#42: Ind #47]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Unwind}
      
      
 124)  Stack:[#47: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#42, #23, #40, #45]>]
       Code:{Unwind}
      
      
 125)  Stack:[#45: Appl #44 #40
              #40: Appl #39 #38
              #23: 1
              #42: Ind #47
              #47: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{(Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 126)  Stack:[#45: Appl #44 #40
              #40: Appl #39 #38
              #23: 1
              #42: Ind #47]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 2
             Update 3
             Pop 3
             Unwind}
      
      
 127)  Stack:[#45: Appl #44 #40
              #40: Appl #39 #38
              #23: 1
              #42: Ind #47
              #40: Appl #39 #38]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Update 3
             Pop 3
             Unwind}
      
      
 128)  Stack:[#45: Ind #40
              #40: Appl #39 #38
              #23: 1
              #42: Ind #47]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pop 3
             Unwind}
      
      
 129)  Stack:[#45: Ind #40]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 130)  Stack:[#40: Appl #39 #38]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 131)  Stack:[#40: Appl #39 #38
              #39: Appl #11 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 132)  Stack:[#40: Appl #39 #38
              #39: Appl #11 #25
              #11: Global *]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 133)  Stack:[#40: Appl #39 #38
              #38: Appl #1 #37
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 134)  Stack:[#40: Appl #39 #38
              #38: Appl #1 #37
              #25: Ind #46
              #38: Appl #1 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 135)  Stack:[#38: Appl #1 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 136)  Stack:[#38: Appl #1 #37
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 137)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 138)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 139)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #23: 1
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 140)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #23: 1
              #37: Appl #36 #23
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 141)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #23: 1
              #48: Appl #10 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 142)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 143)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #49: Appl #48 #23
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 144)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #50: Appl #1 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 145)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #50: Appl #1 #49
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 146)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #50: Appl #1 #49
              #37: Appl #36 #23
              #11: Global *]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 147)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #50: Appl #1 #49
              #51: Appl #11 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 148)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 149)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 150)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 151)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #29: 0
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 152)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #29: 0
              #37: Appl #36 #23
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 153)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #29: 0
              #53: Appl #14 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 154)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #54: Appl #53 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 155)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #54: Appl #53 #29
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 156)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #23: 1
              #55: Appl #20 #54]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 157)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #52: Appl #51 #50
              #56: Appl #55 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 158)  Stack:[#38: Appl #1 #37
              #37: Appl #36 #23
              #57: Appl #56 #52]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 159)  Stack:[#38: Ind #57
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pop 1
             Unwind}
      
      
 160)  Stack:[#38: Ind #57]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 161)  Stack:[#57: Appl #56 #52]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 162)  Stack:[#57: Appl #56 #52
              #56: Appl #55 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 163)  Stack:[#57: Appl #56 #52
              #56: Appl #55 #23
              #55: Appl #20 #54]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 164)  Stack:[#57: Appl #56 #52
              #56: Appl #55 #23
              #55: Appl #20 #54
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 165)  Stack:[#57: Appl #56 #52
              #52: Appl #51 #50
              #23: 1
              #54: Appl #53 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 0
             Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 166)  Stack:[#57: Appl #56 #52
              #52: Appl #51 #50
              #23: 1
              #54: Appl #53 #29
              #54: Appl #53 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 167)  Stack:[#54: Appl #53 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Unwind}
      
      
 168)  Stack:[#54: Appl #53 #29
              #53: Appl #14 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Unwind}
      
      
 169)  Stack:[#54: Appl #53 #29
              #53: Appl #14 #37
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Unwind}
      
      
 170)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 171)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Appl #36 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 172)  Stack:[#29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Push 1; Eval; Eq; ...}, [#37, #29, #54]>]
       Code:{Unwind}
      
      
 173)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Appl #36 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 174)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Appl #36 #23
              #29: 0
              #37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 175)  Stack:[#37: Appl #36 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Unwind}
      
      
 176)  Stack:[#37: Appl #36 #23
              #36: Appl #10 #25]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Unwind}
      
      
 177)  Stack:[#37: Appl #36 #23
              #36: Appl #10 #25
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Unwind}
      
      
 178)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 179)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 180)  Stack:[#23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>
             <{Push 1; Eval; Sub; ...}, [#25, #23, #37]>]
       Code:{Unwind}
      
      
 181)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 182)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46
              #23: 1
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 183)  Stack:[#25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>
             <{Sub; Update 2; Pop 2; ...}, [#23, #25, #23, #37]>]
       Code:{Unwind}
      
      
 184)  Stack:[#46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>
             <{Sub; Update 2; Pop 2; ...}, [#23, #25, #23, #37]>]
       Code:{Unwind}
      
      
 185)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46
              #23: 1
              #46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
 186)  Stack:[#37: Appl #36 #23
              #23: 1
              #25: Ind #46
              #58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 187)  Stack:[#37: Ind #58
              #23: 1
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Pop 2
             Unwind}
      
      
 188)  Stack:[#37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Unwind}
      
      
 189)  Stack:[#58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #37, #29, #54]>]
       Code:{Unwind}
      
      
 190)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Ind #58
              #29: 0
              #58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Eq
             Update 2
             Pop 2
             Unwind}
      
      
 191)  Stack:[#54: Appl #53 #29
              #29: 0
              #37: Ind #58
              #59: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 192)  Stack:[#54: Ind #59
              #29: 0
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Pop 2
             Unwind}
      
      
 193)  Stack:[#54: Ind #59]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Unwind}
      
      
 194)  Stack:[#59: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#54, #23, #52, #57]>]
       Code:{Unwind}
      
      
 195)  Stack:[#57: Appl #56 #52
              #52: Appl #51 #50
              #23: 1
              #54: Ind #59
              #59: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{(Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 196)  Stack:[#57: Appl #56 #52
              #52: Appl #51 #50
              #23: 1
              #54: Ind #59]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 2
             Update 3
             Pop 3
             Unwind}
      
      
 197)  Stack:[#57: Appl #56 #52
              #52: Appl #51 #50
              #23: 1
              #54: Ind #59
              #52: Appl #51 #50]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Update 3
             Pop 3
             Unwind}
      
      
 198)  Stack:[#57: Ind #52
              #52: Appl #51 #50
              #23: 1
              #54: Ind #59]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pop 3
             Unwind}
      
      
 199)  Stack:[#57: Ind #52]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 200)  Stack:[#52: Appl #51 #50]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 201)  Stack:[#52: Appl #51 #50
              #51: Appl #11 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 202)  Stack:[#52: Appl #51 #50
              #51: Appl #11 #37
              #11: Global *]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 203)  Stack:[#52: Appl #51 #50
              #50: Appl #1 #49
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 204)  Stack:[#52: Appl #51 #50
              #50: Appl #1 #49
              #37: Ind #58
              #50: Appl #1 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Eval
             Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 205)  Stack:[#50: Appl #1 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 206)  Stack:[#50: Appl #1 #49
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 207)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushint 1
             Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 208)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Push 1
             Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 209)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #23: 1
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushglobal -
             MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 210)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #23: 1
              #49: Appl #48 #23
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 211)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #23: 1
              #60: Appl #10 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 212)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #61: Appl #60 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushglobal fac
             MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 213)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #61: Appl #60 #23
              #1: Global fac]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 214)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #62: Appl #1 #61]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Push 1
             Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 215)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #62: Appl #1 #61
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushglobal *
             MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 216)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #62: Appl #1 #61
              #49: Appl #48 #23
              #11: Global *]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 217)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #62: Appl #1 #61
              #63: Appl #11 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 218)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushint 1
             Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 219)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushint 0
             Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 220)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Push 3
             Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 221)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #29: 0
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushglobal ==
             MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 222)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #29: 0
              #49: Appl #48 #23
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 223)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #29: 0
              #65: Appl #14 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 224)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #66: Appl #65 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pushglobal if
             MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 225)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #66: Appl #65 #29
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 226)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #23: 1
              #67: Appl #20 #66]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 227)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #64: Appl #63 #62
              #68: Appl #67 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{MkAppl
             Update 1
             Pop 1
             Unwind}
      
      
 228)  Stack:[#50: Appl #1 #49
              #49: Appl #48 #23
              #69: Appl #68 #64]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Update 1
             Pop 1
             Unwind}
      
      
 229)  Stack:[#50: Ind #69
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pop 1
             Unwind}
      
      
 230)  Stack:[#50: Ind #69]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 231)  Stack:[#69: Appl #68 #64]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 232)  Stack:[#69: Appl #68 #64
              #68: Appl #67 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 233)  Stack:[#69: Appl #68 #64
              #68: Appl #67 #23
              #67: Appl #20 #66]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 234)  Stack:[#69: Appl #68 #64
              #68: Appl #67 #23
              #67: Appl #20 #66
              #20: Global if]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 235)  Stack:[#69: Appl #68 #64
              #64: Appl #63 #62
              #23: 1
              #66: Appl #65 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Push 0
             Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 236)  Stack:[#69: Appl #68 #64
              #64: Appl #63 #62
              #23: 1
              #66: Appl #65 #29
              #66: Appl #65 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Eval
             (Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 237)  Stack:[#66: Appl #65 #29]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Unwind}
      
      
 238)  Stack:[#66: Appl #65 #29
              #65: Appl #14 #49]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Unwind}
      
      
 239)  Stack:[#66: Appl #65 #29
              #65: Appl #14 #49
              #14: Global ==]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Unwind}
      
      
 240)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 241)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Appl #48 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Eval
             Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 242)  Stack:[#29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Push 1; Eval; Eq; ...}, [#49, #29, #66]>]
       Code:{Unwind}
      
      
 243)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Appl #48 #23
              #29: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Push 1
             Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 244)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Appl #48 #23
              #29: 0
              #49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Eval
             Eq
             Update 2
             Pop 2
             Unwind}
      
      
 245)  Stack:[#49: Appl #48 #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Unwind}
      
      
 246)  Stack:[#49: Appl #48 #23
              #48: Appl #10 #37]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Unwind}
      
      
 247)  Stack:[#49: Appl #48 #23
              #48: Appl #10 #37
              #10: Global -]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Unwind}
      
      
 248)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Push 1
             Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 249)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Eval
             Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 250)  Stack:[#23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>
             <{Push 1; Eval; Sub; ...}, [#37, #23, #49]>]
       Code:{Unwind}
      
      
 251)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Push 1
             Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 252)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58
              #23: 1
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Eval
             Sub
             Update 2
             Pop 2
             Unwind}
      
      
 253)  Stack:[#37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>
             <{Sub; Update 2; Pop 2; ...}, [#23, #37, #23, #49]>]
       Code:{Unwind}
      
      
 254)  Stack:[#58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>
             <{Sub; Update 2; Pop 2; ...}, [#23, #37, #23, #49]>]
       Code:{Unwind}
      
      
 255)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58
              #23: 1
              #58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Sub
             Update 2
             Pop 2
             Unwind}
      
      
 256)  Stack:[#49: Appl #48 #23
              #23: 1
              #37: Ind #58
              #70: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 257)  Stack:[#49: Ind #70
              #23: 1
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Pop 2
             Unwind}
      
      
 258)  Stack:[#49: Ind #70]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Unwind}
      
      
 259)  Stack:[#70: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>
             <{Eq; Update 2; Pop 2; ...}, [#29, #49, #29, #66]>]
       Code:{Unwind}
      
      
 260)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Ind #70
              #29: 0
              #70: 0]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Eq
             Update 2
             Pop 2
             Unwind}
      
      
 261)  Stack:[#66: Appl #65 #29
              #29: 0
              #49: Ind #70
              #71: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 262)  Stack:[#66: Ind #71
              #29: 0
              #49: Ind #70]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Pop 2
             Unwind}
      
      
 263)  Stack:[#66: Ind #71]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Unwind}
      
      
 264)  Stack:[#71: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>
             <{(Cond
             1-> {Push 1}
             0-> {Push 2}); Update 3; Pop 3; ...}, [#66, #23, #64, #69]>]
       Code:{Unwind}
      
      
 265)  Stack:[#69: Appl #68 #64
              #64: Appl #63 #62
              #23: 1
              #66: Ind #71
              #71: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{(Cond
             1-> {Push 1}
             0-> {Push 2})
             Update 3
             Pop 3
             Unwind}
      
      
 266)  Stack:[#69: Appl #68 #64
              #64: Appl #63 #62
              #23: 1
              #66: Ind #71]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Push 1
             Update 3
             Pop 3
             Unwind}
      
      
 267)  Stack:[#69: Appl #68 #64
              #64: Appl #63 #62
              #23: 1
              #66: Ind #71
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Update 3
             Pop 3
             Unwind}
      
      
 268)  Stack:[#69: Ind #23
              #64: Appl #63 #62
              #23: 1
              #66: Ind #71]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Pop 3
             Unwind}
      
      
 269)  Stack:[#69: Ind #23]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 270)  Stack:[#23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Push 1; Eval; Mul; ...}, [#37, #50, #52]>]
       Code:{Unwind}
      
      
 271)  Stack:[#52: Appl #51 #50
              #50: Ind #69
              #37: Ind #58
              #23: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 272)  Stack:[#52: Appl #51 #50
              #50: Ind #69
              #37: Ind #58
              #23: 1
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 273)  Stack:[#37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Mul; Update 2; Pop 2; ...}, [#23, #37, #50, #52]>]
       Code:{Unwind}
      
      
 274)  Stack:[#58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>
             <{Mul; Update 2; Pop 2; ...}, [#23, #37, #50, #52]>]
       Code:{Unwind}
      
      
 275)  Stack:[#52: Appl #51 #50
              #50: Ind #69
              #37: Ind #58
              #23: 1
              #58: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Mul
             Update 2
             Pop 2
             Unwind}
      
      
 276)  Stack:[#52: Appl #51 #50
              #50: Ind #69
              #37: Ind #58
              #72: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 277)  Stack:[#52: Ind #72
              #50: Ind #69
              #37: Ind #58]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Pop 2
             Unwind}
      
      
 278)  Stack:[#52: Ind #72]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 279)  Stack:[#72: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Push 1; Eval; Mul; ...}, [#25, #38, #40]>]
       Code:{Unwind}
      
      
 280)  Stack:[#40: Appl #39 #38
              #38: Ind #57
              #25: Ind #46
              #72: 1]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 281)  Stack:[#40: Appl #39 #38
              #38: Ind #57
              #25: Ind #46
              #72: 1
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 282)  Stack:[#25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Mul; Update 2; Pop 2; ...}, [#72, #25, #38, #40]>]
       Code:{Unwind}
      
      
 283)  Stack:[#46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>
             <{Mul; Update 2; Pop 2; ...}, [#72, #25, #38, #40]>]
       Code:{Unwind}
      
      
 284)  Stack:[#40: Appl #39 #38
              #38: Ind #57
              #25: Ind #46
              #72: 1
              #46: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Mul
             Update 2
             Pop 2
             Unwind}
      
      
 285)  Stack:[#40: Appl #39 #38
              #38: Ind #57
              #25: Ind #46
              #73: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 286)  Stack:[#40: Ind #73
              #38: Ind #57
              #25: Ind #46]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Pop 2
             Unwind}
      
      
 287)  Stack:[#40: Ind #73]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 288)  Stack:[#73: 2]
       Dump:[<{}, []>
             <{Push 1; Eval; Mul; ...}, [#21, #26, #28]>]
       Code:{Unwind}
      
      
 289)  Stack:[#28: Appl #27 #26
              #26: Ind #45
              #21: 3
              #73: 2]
       Dump:[<{}, []>]
       Code:{Push 1
             Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 290)  Stack:[#28: Appl #27 #26
              #26: Ind #45
              #21: 3
              #73: 2
              #21: 3]
       Dump:[<{}, []>]
       Code:{Eval
             Mul
             Update 2
             Pop 2
             Unwind}
      
      
 291)  Stack:[#21: 3]
       Dump:[<{}, []>
             <{Mul; Update 2; Pop 2; ...}, [#73, #21, #26, #28]>]
       Code:{Unwind}
      
      
 292)  Stack:[#28: Appl #27 #26
              #26: Ind #45
              #21: 3
              #73: 2
              #21: 3]
       Dump:[<{}, []>]
       Code:{Mul
             Update 2
             Pop 2
             Unwind}
      
      
 293)  Stack:[#28: Appl #27 #26
              #26: Ind #45
              #21: 3
              #74: 6]
       Dump:[<{}, []>]
       Code:{Update 2
             Pop 2
             Unwind}
      
      
 294)  Stack:[#28: Ind #74
              #26: Ind #45
              #21: 3]
       Dump:[<{}, []>]
       Code:{Pop 2
             Unwind}
      
      
 295)  Stack:[#28: Ind #74]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
 296)  Stack:[#74: 6]
       Dump:[<{}, []>]
       Code:{Unwind}
      
      
 297)  Stack:[#74: 6]
       Dump:[]
       Code:{}
      
      


Steps taken = 296